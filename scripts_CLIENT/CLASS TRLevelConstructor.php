<?class TRLevelConstructor{	static $Images=array();	function Generate($Pars){	// сгенерить левел по параметрам с сервера		$size = $Pars["size"];		$start_finish = $Pars["start_finish"];		$key = $Pars["key"];		return hichkok_brutal::generate_labirint_brutal($size, $start_finish, $key);	}	function Draw(&$A,$w,$h,$s=10,$r=0,$f=array(0,0)){	// s-размер ячейки, r-рамка		$width=$w*$s+2*$r+1;		$height=$h*$s+2*$r+1;		$img = imagecreatetruecolor($width,$height);		$color=imagecolorallocate($img, $red=0, $green=0, $blue=0);		$fill= imagecolorallocatealpha($img, $red=195, $green=195, $blue=195, $alpha=31);		$fill_f= imagecolorallocatealpha($img, $red=255, $green=255, $blue=63, $alpha=63);		imagefill($img, 0, 0, $fill /* IMG_COLOR_TRANSPARENT */);		$quad=array();		$quad[0]=$r+$s*$f[0]-2;		$quad[1]=$r+$s*$f[1]-2;		$quad[2]=$quad[0]+$s+4;		$quad[3]=$quad[1]+$s+4;		imagefilledrectangle($img, $quad[0], $quad[1], $quad[2], $quad[3],$fill_f);		for($x=0;$x<$w;++$x){			$kx=$x*2;			$x1=$r+$x*$s;			$x2=$x1+$s;			for($y=0;$y<$h;++$y){				$ky=$y*2;				$y1=$r+$y*$s;				$y2=$y1+$s;				if(isset($A[$kx+1][$ky])) if($A[$kx+1][$ky]!==0)					imageline($img, $x2, $y1, $x2, $y2, $color );				if(isset($A[$kx][$ky+1])) if($A[$kx][$ky+1]!==0)					imageline($img, $x1, $y2, $x2, $y2, $color );			}		}		//рамка		imageline($img, $r, $r, $r, $r+$h*$s, $color);		imageline($img, $r, $r, $r+$w*$s, $r, $color);		imageline($img, $r, $r+$h*$s, $r+$w*$s, $r+$h*$s, $color);		imageline($img, $r+$w*$s, $r, $r+$w*$s, $r+$h*$s, $color);				//imagealphablending($thumb,false);		imagesavealpha($img, true);    // ключевая функция для прозрачности				return $img;	}	function ImageToStr(&$img){		ob_start();		imagepng($img);		$data = ob_get_contents();		ob_end_clean();		return $data;	}	function ImageToSize(&$imgStr,$w,$h,$file=false){		err_no();		$img=imagecreatefromstring($imgStr);		err_yes();		if(false===$img) return false;		$x=imagesx($img);		$y=imagesy($img);		$wh=$w/$h;		$p=array(0,0,$x,$y);	// x1 y1 x2 y2		if($x/$y > $wh){			$nw=floor($y*$wh);			if($nw<$x){				$p[0]=floor(($x-$nw)/2);				$p[2]=$nw;			}		}else{			$nh=ceil($x/$wh);			if($nh<$y){				$p[1]=floor(($y-$nh)/2);				$p[3]=$nh;			}		}		$newimage=imagecreatetruecolor($w,$h);		imagesavealpha($newimage, true);    // ключевая функция для прозрачности		imagefill($newimage, 0, 0, IMG_COLOR_TRANSPARENT); 		imagecopyresampled($newimage, $img, 0, 0, $p[0], $p[1], $w, $h, $p[2], $p[3]);		if($file){			//pre($file);			_mkdir(dirname($file));			imagejpeg($img,$file,100);		}		imagedestroy($img);				//file_put_contents(DOC_ROOT.'/testimg.png',TRLevelConstructor::ImageToStr($newimage));		return $newimage;	}	}// require_once('hichkok_brutal.php');// $w = 25; $h = 25;// $key = 113;// $A = TRLevelConstructor::Generate(Array("size" => Array($w, $h), "start_finish" => Array(0, 0, $w-1, $h-1), "key" => $key));// $img = TRLevelConstructor::Draw($A, $w, $h);// file_put_contents(__FILE__.'.png',TRLevelConstructor::ImageToStr($img));// imagedestroy($img);/*$A=array(		array(	'',	1,	'',	0,	'',	0,	'',	0,	''),		array(	0,	1,	0,	1,	0,	1,	1,	1,	0),		array(	'',	1,	'',	1,	'',	1,	'',	0,	''),		array(	0,	1,	1,	1,	0,	1,	0,	1,	0),		array(	'',	0,	'',	0,	'',	1,	'',	1,	''),		array(	1,	1,	1,	1,	1,	1,	1,	1,	0),		array(	'',	1,	'',	0,	'',	1,	'',	0,	''),		array(	0,	1,	0,	1,	0,	1,	0,	1,	1),		array(	'',	0,	'',	1,	'',	0,	'',	0,	''),	);$w=5;$h=5;$r=0;//рамка$s=20;//размер ячейки$img=TRLevelConstructor::Draw($A,$w,$h,$s,$r);file_put_contents(__FILE__.'.png',TRLevelConstructor::ImageToStr($img)); imagedestroy($img); //*/?>